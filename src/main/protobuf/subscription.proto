syntax = "proto3";

package subgrpc;

service SubscriptionService {
  rpc Subscribe(stream SubscriptionRequest) returns (stream PublisherResponse);
}

/* A SubscriptionRequest is a message sent to subscribe or unsubscribe
 * to one or many endpoints of one or many sensors.
 *
 * The action will be matched to either add or remove one or many subscriptions. */

message SubscriptionRequest {
  // Describes the intention behind the request in regards to the path
  enum Action {
    ADD = 0;
    REMOVE = 1;
  }

  Action action = 1;

  repeated Path subscriptions = 2;
}

/* A response to a SubscriptionRequest.
 * It contains an identifier to match the response
 * to a subscription, if necessary. The meat of
 * response is a repeated string, usually one. */

message PublisherResponse {

    // A reference to the "subscription" field
    Path identifier = 1;

    // The topic's newest content
    string content = 2;
}

/* A Path is equivalent to the path of an URI, yet does NOT contain slashes
 * and its segments are separated strings.
 * Since proto3 does NOT support required fields, the API has
 * to filter this field. Empty paths and paths containing slashes will be rejected.
 *
 * THIS WOULD MATCH AGAINST A SUBSCRIPTION TO THE WHOLE BROKER WHICH IS NOT ALLOWED. */

message Path {
  repeated string segments = 1;
}